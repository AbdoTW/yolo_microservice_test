{"ast":null,"code":"var _jsxFileName = \"/home/tawfik/git/yolo_microservice_test/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Upload, Download, Wifi, WifiOff, AlertCircle, CheckCircle, Clock } from 'lucide-react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State management\n  const [uploadStatus, setUploadStatus] = useState('idle'); // idle, uploaded, processing, completed, error\n  const [isConnected, setIsConnected] = useState(false);\n  const [currentFrame, setCurrentFrame] = useState(null);\n  const [stats, setStats] = useState({\n    current_human_count: 0,\n    total_humans: 0,\n    total_frames: 0,\n    processing_status: 'idle',\n    current_video: null\n  });\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const wsRef = useRef(null);\n  const statsIntervalRef = useRef(null);\n\n  // Configuration\n  const API_BASE = 'http://localhost:8003';\n  const WS_URL = 'ws://localhost:8003/ws';\n  const SUPPORTED_FORMATS = ['mp4', 'avi', 'mov', 'mkv', 'webm'];\n\n  // Utility functions\n  const showError = message => {\n    setError(message);\n    setTimeout(() => setError(''), 5000);\n  };\n  const showSuccess = message => {\n    setSuccess(message);\n    setTimeout(() => setSuccess(''), 3000);\n  };\n  const validateFile = file => {\n    if (!file) return 'No file selected';\n    const fileExtension = file.name.split('.').pop().toLowerCase();\n    if (!SUPPORTED_FORMATS.includes(fileExtension)) {\n      return `Unsupported format. Please use: ${SUPPORTED_FORMATS.join(', ').toUpperCase()}`;\n    }\n\n    // Check file size (limit to 500MB)\n    const maxSize = 500 * 1024 * 1024; // 500MB in bytes\n    if (file.size > maxSize) {\n      return 'File size too large. Maximum size is 500MB';\n    }\n    return null;\n  };\n\n  // WebSocket functions\n  const connectWebSocket = useCallback(() => {\n    var _wsRef$current;\n    if (((_wsRef$current = wsRef.current) === null || _wsRef$current === void 0 ? void 0 : _wsRef$current.readyState) === WebSocket.OPEN) return;\n    try {\n      wsRef.current = new WebSocket(WS_URL);\n      wsRef.current.onopen = () => {\n        console.log('WebSocket connected');\n        setIsConnected(true);\n      };\n      wsRef.current.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          if (data.type === 'frame_update') {\n            setCurrentFrame(`data:image/jpeg;base64,${data.frame_data}`);\n            // Update current human count from WebSocket data\n            setStats(prev => ({\n              ...prev,\n              current_human_count: data.human_count || 0\n            }));\n          }\n\n          // CRITICAL: Handle processing completion\n          if (data.type === 'processing_complete') {\n            console.log('Video processing completed!', data);\n            setUploadStatus('completed');\n            showSuccess('Video processing completed! You can now download the processed video.');\n            stopStatsPolling();\n\n            // Update final stats\n            setStats(prev => ({\n              ...prev,\n              processing_status: 'completed',\n              total_frames: data.total_frames || prev.total_frames\n            }));\n\n            // Optional: Close WebSocket after completion\n            if (wsRef.current) {\n              wsRef.current.close();\n            }\n          }\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      wsRef.current.onclose = () => {\n        console.log('WebSocket disconnected');\n        setIsConnected(false);\n\n        // Auto-reconnect if processing (but not if completed)\n        if (uploadStatus === 'processing') {\n          setTimeout(connectWebSocket, 2000);\n        }\n      };\n      wsRef.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('Failed to connect WebSocket:', error);\n      setIsConnected(false);\n    }\n  }, [uploadStatus]);\n\n  // API functions\n  const uploadFile = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch(`${API_BASE}/api/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          detail: 'Upload failed'\n        }));\n        throw new Error(errorData.detail || 'Upload failed');\n      }\n      const result = await response.json();\n      setUploadedFile({\n        filename: result.filename,\n        originalName: file.name\n      });\n      setUploadStatus('uploaded');\n      showSuccess('File uploaded successfully!');\n\n      // Auto-start processing\n      await startProcessing(result.filename);\n    } catch (error) {\n      console.error('Upload error:', error);\n      showError(error.message || 'Upload failed');\n      setUploadStatus('error');\n    }\n  };\n  const startProcessing = async filename => {\n    try {\n      const response = await fetch(`${API_BASE}/api/start-stream`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          filename: filename\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          detail: 'Processing failed to start'\n        }));\n        throw new Error(errorData.detail || 'Processing failed to start');\n      }\n      setUploadStatus('processing');\n      connectWebSocket();\n      startStatsPolling();\n      showSuccess('Processing started!');\n    } catch (error) {\n      console.error('Start processing error:', error);\n      showError(error.message || 'Failed to start processing');\n      setUploadStatus('error');\n    }\n  };\n  const fetchStats = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/api/stats`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Stats update:', data); // Debug log\n        setStats(data);\n\n        // Update upload status based on backend status\n        if (data.processing_status === 'completed' && uploadStatus === 'processing') {\n          setUploadStatus('completed');\n          showSuccess('Video processing completed!');\n          stopStatsPolling();\n        } else if (data.processing_status === 'processing') {\n          setUploadStatus('processing');\n        } else if (data.processing_status === 'error') {\n          setUploadStatus('error');\n          stopStatsPolling();\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n    }\n  };\n  const downloadProcessedVideo = async () => {\n    if (!(uploadedFile !== null && uploadedFile !== void 0 && uploadedFile.filename) || uploadStatus !== 'completed') return;\n    try {\n      // First check if video is ready\n      const statusResponse = await fetch(`${API_BASE}/api/video-status/${uploadedFile.filename}`);\n      const statusData = await statusResponse.json();\n      if (!statusData.ready) {\n        showError('Processed video is not ready yet or file is empty');\n        return;\n      }\n      console.log(`Downloading video: ${statusData.file_size_mb}MB`);\n\n      // Download the file\n      const response = await fetch(`${API_BASE}/api/download/${uploadedFile.filename}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          detail: 'Download failed'\n        }));\n        throw new Error(errorData.detail || 'Download failed');\n      }\n\n      // Get the blob\n      const blob = await response.blob();\n\n      // Verify blob has content\n      if (blob.size === 0) {\n        throw new Error('Downloaded file is empty');\n      }\n\n      // Create download link\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = `processed_${uploadedFile.originalName}`;\n\n      // Trigger download\n      document.body.appendChild(a);\n      a.click();\n\n      // Cleanup\n      setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      }, 100);\n      showSuccess(`Download started! (${statusData.file_size_mb}MB)`);\n    } catch (error) {\n      console.error('Download error:', error);\n      showError(error.message || 'Failed to download processed video');\n    }\n  };\n  const checkVideoReady = async () => {\n    if (!(uploadedFile !== null && uploadedFile !== void 0 && uploadedFile.filename)) return false;\n    try {\n      const response = await fetch(`${API_BASE}/api/video-status/${uploadedFile.filename}`);\n      const data = await response.json();\n      return data.ready;\n    } catch (error) {\n      console.error('Error checking video status:', error);\n      return false;\n    }\n  };\n\n  // Polling functions\n  const startStatsPolling = () => {\n    stopStatsPolling(); // Clear any existing interval\n    fetchStats(); // Fetch immediately\n    statsIntervalRef.current = setInterval(fetchStats, 2000);\n  };\n  const stopStatsPolling = () => {\n    if (statsIntervalRef.current) {\n      clearInterval(statsIntervalRef.current);\n      statsIntervalRef.current = null;\n    }\n  };\n\n  // Event handlers\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const validationError = validateFile(file);\n    if (validationError) {\n      showError(validationError);\n      return;\n    }\n    uploadFile(file);\n  };\n  const handleUploadClick = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      const file = files[0];\n      const validationError = validateFile(file);\n      if (validationError) {\n        showError(validationError);\n        return;\n      }\n      uploadFile(file);\n    }\n  };\n\n  // Status indicator component\n  const StatusIndicator = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center gap-2\",\n    children: [uploadStatus === 'idle' && /*#__PURE__*/_jsxDEV(Clock, {\n      className: \"w-4 h-4 text-gray-400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 35\n    }, this), uploadStatus === 'uploaded' && /*#__PURE__*/_jsxDEV(CheckCircle, {\n      className: \"w-4 h-4 text-green-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 39\n    }, this), uploadStatus === 'processing' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this), uploadStatus === 'completed' && /*#__PURE__*/_jsxDEV(CheckCircle, {\n      className: \"w-4 h-4 text-green-600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 40\n    }, this), uploadStatus === 'error' && /*#__PURE__*/_jsxDEV(AlertCircle, {\n      className: \"w-4 h-4 text-red-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-medium capitalize text-sm\",\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n  const ConnectionStatus = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center gap-2\",\n    children: isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Wifi, {\n        className: \"w-4 h-4 text-green-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-green-600 text-sm\",\n        children: \"Connected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(WifiOff, {\n        className: \"w-4 h-4 text-red-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-600 text-sm\",\n        children: \"Disconnected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this);\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      stopStatsPolling();\n    };\n  }, []);\n\n  // Auto-connect WebSocket and start polling on mount\n  useEffect(() => {\n    connectWebSocket();\n    startStatsPolling();\n  }, [connectWebSocket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-full mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mb-8 px-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-900 mb-2\",\n          children: \"Real-time Video Detection Service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Upload videos for human detection analysis with live streaming results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n            className: \"w-5 h-5 text-red-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-700\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-4 bg-green-50 border border-green-200 rounded-lg flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"w-5 h-5 text-green-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-700\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-sm border-t border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border-b border-gray-200 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap items-center justify-between gap-4 max-w-7xl mx-auto px-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                ref: fileInputRef,\n                onChange: handleFileSelect,\n                accept: SUPPORTED_FORMATS.map(format => `.${format}`).join(','),\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleUploadClick,\n                disabled: uploadStatus === 'processing',\n                className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  className: \"w-4 h-4 inline mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 19\n                }, this), \"Upload\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ConnectionStatus, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-4 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: stats.current_human_count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 23\n                }, this), \" Current\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: stats.total_humans\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 23\n                }, this), \" Total\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: stats.total_frames\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 23\n                }, this), \" Frames\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: downloadProcessedVideo,\n                disabled: uploadStatus !== 'completed' || !uploadedFile,\n                className: `px-3 py-1 rounded font-medium transition-colors ${uploadStatus === 'completed' && uploadedFile ? 'bg-green-600 hover:bg-green-700 text-white' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  className: \"w-4 h-4 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 19\n                }, this), uploadStatus === 'completed' && uploadedFile ? 'Download' : uploadStatus === 'processing' ? 'Processing...' : 'Download']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-black flex items-center justify-center relative h-screen-70 w-full\",\n          onDragOver: handleDragOver,\n          onDrop: handleDrop,\n          children: [currentFrame ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentFrame,\n            alt: \"Processed frame with detections\",\n            className: \"max-w-full max-h-full object-contain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              className: \"w-16 h-16 mx-auto mb-4 opacity-50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg\",\n              children: \"Drop video file here or click Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm opacity-75\",\n              children: [\"Supports: \", SUPPORTED_FORMATS.join(', ').toUpperCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs opacity-50 mt-2\",\n              children: \"Real-time detection with bounding boxes will appear here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), uploadStatus === 'processing' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-4 left-4 bg-red-600 text-white px-3 py-1 rounded-full text-sm font-medium\",\n            children: \"\\u25CF LIVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this), stats.current_video && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute bottom-4 left-4 bg-black bg-opacity-75 text-white px-3 py-1 rounded text-sm\",\n            children: stats.current_video\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MvOSxdAQGL1TRAUigx7nwCwE6Jg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Upload","Download","Wifi","WifiOff","AlertCircle","CheckCircle","Clock","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","uploadStatus","setUploadStatus","isConnected","setIsConnected","currentFrame","setCurrentFrame","stats","setStats","current_human_count","total_humans","total_frames","processing_status","current_video","uploadedFile","setUploadedFile","error","setError","success","setSuccess","fileInputRef","wsRef","statsIntervalRef","API_BASE","WS_URL","SUPPORTED_FORMATS","showError","message","setTimeout","showSuccess","validateFile","file","fileExtension","name","split","pop","toLowerCase","includes","join","toUpperCase","maxSize","size","connectWebSocket","_wsRef$current","current","readyState","WebSocket","OPEN","onopen","console","log","onmessage","event","data","JSON","parse","type","frame_data","prev","human_count","stopStatsPolling","close","onclose","onerror","uploadFile","formData","FormData","append","response","fetch","method","body","ok","errorData","json","catch","detail","Error","result","filename","originalName","startProcessing","headers","stringify","startStatsPolling","fetchStats","downloadProcessedVideo","statusResponse","statusData","ready","file_size_mb","blob","url","window","URL","createObjectURL","a","document","createElement","style","display","href","download","appendChild","click","revokeObjectURL","removeChild","checkVideoReady","setInterval","clearInterval","handleFileSelect","target","files","validationError","handleUploadClick","_fileInputRef$current","handleDragOver","preventDefault","stopPropagation","handleDrop","dataTransfer","length","StatusIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ConnectionStatus","ref","onChange","accept","map","format","onClick","disabled","onDragOver","onDrop","src","alt","_c","$RefreshReg$"],"sources":["/home/tawfik/git/yolo_microservice_test/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Upload, Download, Wifi, WifiOff, AlertCircle, CheckCircle, Clock } from 'lucide-react';\nimport './App.css';\n\nconst App = () => {\n  // State management\n  const [uploadStatus, setUploadStatus] = useState('idle'); // idle, uploaded, processing, completed, error\n  const [isConnected, setIsConnected] = useState(false);\n  const [currentFrame, setCurrentFrame] = useState(null);\n  const [stats, setStats] = useState({\n    current_human_count: 0,\n    total_humans: 0,\n    total_frames: 0,\n    processing_status: 'idle',\n    current_video: null\n  });\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const wsRef = useRef(null);\n  const statsIntervalRef = useRef(null);\n\n  // Configuration\n  const API_BASE = 'http://localhost:8003';\n  const WS_URL = 'ws://localhost:8003/ws';\n  const SUPPORTED_FORMATS = ['mp4', 'avi', 'mov', 'mkv', 'webm'];\n\n  // Utility functions\n  const showError = (message) => {\n    setError(message);\n    setTimeout(() => setError(''), 5000);\n  };\n\n  const showSuccess = (message) => {\n    setSuccess(message);\n    setTimeout(() => setSuccess(''), 3000);\n  };\n\n  const validateFile = (file) => {\n    if (!file) return 'No file selected';\n    \n    const fileExtension = file.name.split('.').pop().toLowerCase();\n    if (!SUPPORTED_FORMATS.includes(fileExtension)) {\n      return `Unsupported format. Please use: ${SUPPORTED_FORMATS.join(', ').toUpperCase()}`;\n    }\n    \n    // Check file size (limit to 500MB)\n    const maxSize = 500 * 1024 * 1024; // 500MB in bytes\n    if (file.size > maxSize) {\n      return 'File size too large. Maximum size is 500MB';\n    }\n    \n    return null;\n  };\n\n  // WebSocket functions\n  const connectWebSocket = useCallback(() => {\n    if (wsRef.current?.readyState === WebSocket.OPEN) return;\n\n    try {\n      wsRef.current = new WebSocket(WS_URL);\n      \n      wsRef.current.onopen = () => {\n        console.log('WebSocket connected');\n        setIsConnected(true);\n      };\n\n      wsRef.current.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          \n          if (data.type === 'frame_update') {\n            setCurrentFrame(`data:image/jpeg;base64,${data.frame_data}`);\n            // Update current human count from WebSocket data\n            setStats(prev => ({\n              ...prev,\n              current_human_count: data.human_count || 0\n            }));\n          }\n          \n          // CRITICAL: Handle processing completion\n          if (data.type === 'processing_complete') {\n            console.log('Video processing completed!', data);\n            setUploadStatus('completed');\n            showSuccess('Video processing completed! You can now download the processed video.');\n            stopStatsPolling();\n            \n            // Update final stats\n            setStats(prev => ({\n              ...prev,\n              processing_status: 'completed',\n              total_frames: data.total_frames || prev.total_frames\n            }));\n            \n            // Optional: Close WebSocket after completion\n            if (wsRef.current) {\n              wsRef.current.close();\n            }\n          }\n\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n\n      wsRef.current.onclose = () => {\n        console.log('WebSocket disconnected');\n        setIsConnected(false);\n        \n        // Auto-reconnect if processing (but not if completed)\n        if (uploadStatus === 'processing') {\n          setTimeout(connectWebSocket, 2000);\n        }\n      };\n\n      wsRef.current.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        setIsConnected(false);\n      };\n\n    } catch (error) {\n      console.error('Failed to connect WebSocket:', error);\n      setIsConnected(false);\n    }\n  }, [uploadStatus]);\n\n  // API functions\n  const uploadFile = async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await fetch(`${API_BASE}/api/upload`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ detail: 'Upload failed' }));\n        throw new Error(errorData.detail || 'Upload failed');\n      }\n\n      const result = await response.json();\n      setUploadedFile({\n        filename: result.filename,\n        originalName: file.name\n      });\n      setUploadStatus('uploaded');\n      showSuccess('File uploaded successfully!');\n      \n      // Auto-start processing\n      await startProcessing(result.filename);\n      \n    } catch (error) {\n      console.error('Upload error:', error);\n      showError(error.message || 'Upload failed');\n      setUploadStatus('error');\n    }\n  };\n\n  const startProcessing = async (filename) => {\n    try {\n      const response = await fetch(`${API_BASE}/api/start-stream`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ filename: filename }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ detail: 'Processing failed to start' }));\n        throw new Error(errorData.detail || 'Processing failed to start');\n      }\n\n      setUploadStatus('processing');\n      connectWebSocket();\n      startStatsPolling();\n      showSuccess('Processing started!');\n\n    } catch (error) {\n      console.error('Start processing error:', error);\n      showError(error.message || 'Failed to start processing');\n      setUploadStatus('error');\n    }\n  };\n\n  const fetchStats = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/api/stats`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Stats update:', data); // Debug log\n        setStats(data);\n\n        // Update upload status based on backend status\n        if (data.processing_status === 'completed' && uploadStatus === 'processing') {\n          setUploadStatus('completed');\n          showSuccess('Video processing completed!');\n          stopStatsPolling();\n        } else if (data.processing_status === 'processing') {\n          setUploadStatus('processing');\n        } else if (data.processing_status === 'error') {\n          setUploadStatus('error');\n          stopStatsPolling();\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n    }\n  };\n\n  const downloadProcessedVideo = async () => {\n    if (!uploadedFile?.filename || uploadStatus !== 'completed') return;\n\n    try {\n      // First check if video is ready\n      const statusResponse = await fetch(`${API_BASE}/api/video-status/${uploadedFile.filename}`);\n      const statusData = await statusResponse.json();\n      \n      if (!statusData.ready) {\n        showError('Processed video is not ready yet or file is empty');\n        return;\n      }\n      \n      console.log(`Downloading video: ${statusData.file_size_mb}MB`);\n      \n      // Download the file\n      const response = await fetch(`${API_BASE}/api/download/${uploadedFile.filename}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ detail: 'Download failed' }));\n        throw new Error(errorData.detail || 'Download failed');\n      }\n      \n      // Get the blob\n      const blob = await response.blob();\n      \n      // Verify blob has content\n      if (blob.size === 0) {\n        throw new Error('Downloaded file is empty');\n      }\n      \n      // Create download link\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = `processed_${uploadedFile.originalName}`;\n      \n      // Trigger download\n      document.body.appendChild(a);\n      a.click();\n      \n      // Cleanup\n      setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      }, 100);\n      \n      showSuccess(`Download started! (${statusData.file_size_mb}MB)`);\n\n    } catch (error) {\n      console.error('Download error:', error);\n      showError(error.message || 'Failed to download processed video');\n    }\n  };\n\n\n  const checkVideoReady = async () => {\n    if (!uploadedFile?.filename) return false;\n    \n    try {\n      const response = await fetch(`${API_BASE}/api/video-status/${uploadedFile.filename}`);\n      const data = await response.json();\n      return data.ready;\n    } catch (error) {\n      console.error('Error checking video status:', error);\n      return false;\n    }\n  };\n\n  // Polling functions\n  const startStatsPolling = () => {\n    stopStatsPolling(); // Clear any existing interval\n    fetchStats(); // Fetch immediately\n    statsIntervalRef.current = setInterval(fetchStats, 2000);\n  };\n\n  const stopStatsPolling = () => {\n    if (statsIntervalRef.current) {\n      clearInterval(statsIntervalRef.current);\n      statsIntervalRef.current = null;\n    }\n  };\n\n  // Event handlers\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const validationError = validateFile(file);\n    if (validationError) {\n      showError(validationError);\n      return;\n    }\n\n    uploadFile(file);\n  };\n\n  const handleUploadClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      const file = files[0];\n      const validationError = validateFile(file);\n      if (validationError) {\n        showError(validationError);\n        return;\n      }\n\n      uploadFile(file);\n    }\n  };\n\n  // Status indicator component\n  const StatusIndicator = () => (\n    <div className=\"flex items-center gap-2\">\n      {uploadStatus === 'idle' && <Clock className=\"w-4 h-4 text-gray-400\" />}\n      {uploadStatus === 'uploaded' && <CheckCircle className=\"w-4 h-4 text-green-500\" />}\n      {uploadStatus === 'processing' && (\n        <div className=\"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n      )}\n      {uploadStatus === 'completed' && <CheckCircle className=\"w-4 h-4 text-green-600\" />}\n      {uploadStatus === 'error' && <AlertCircle className=\"w-4 h-4 text-red-500\" />}\n      <span className=\"font-medium capitalize text-sm\">{uploadStatus}</span>\n    </div>\n  );\n\n  const ConnectionStatus = () => (\n    <div className=\"flex items-center gap-2\">\n      {isConnected ? (\n        <>\n          <Wifi className=\"w-4 h-4 text-green-500\" />\n          <span className=\"text-green-600 text-sm\">Connected</span>\n        </>\n      ) : (\n        <>\n          <WifiOff className=\"w-4 h-4 text-red-500\" />\n          <span className=\"text-red-600 text-sm\">Disconnected</span>\n        </>\n      )}\n    </div>\n  );\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      stopStatsPolling();\n    };\n  }, []);\n\n  // Auto-connect WebSocket and start polling on mount\n  useEffect(() => {\n    connectWebSocket();\n    startStatsPolling();\n  }, [connectWebSocket]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6\">\n      <div className=\"max-w-full mx-auto\">\n        <header className=\"mb-8 px-6\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            Real-time Video Detection Service\n          </h1>\n          <p className=\"text-gray-600\">\n            Upload videos for human detection analysis with live streaming results\n          </p>\n        </header>\n\n        {/* Error/Success Messages */}\n        <div className=\"px-6\">\n        {error && (\n          <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg flex items-center gap-2\">\n            <AlertCircle className=\"w-5 h-5 text-red-500\" />\n            <span className=\"text-red-700\">{error}</span>\n          </div>\n        )}\n\n        {success && (\n          <div className=\"mb-4 p-4 bg-green-50 border border-green-200 rounded-lg flex items-center gap-2\">\n            <CheckCircle className=\"w-5 h-5 text-green-500\" />\n            <span className=\"text-green-700\">{success}</span>\n          </div>\n        )}\n        </div>\n\n        <div className=\"bg-white shadow-sm border-t border-gray-200\">\n          {/* Compact Control Panel */}\n          <div className=\"bg-white border-b border-gray-200 p-4\">\n            <div className=\"flex flex-wrap items-center justify-between gap-4 max-w-7xl mx-auto px-6\">\n              <div className=\"flex items-center gap-4\">\n                <input\n                  type=\"file\"\n                  ref={fileInputRef}\n                  onChange={handleFileSelect}\n                  accept={SUPPORTED_FORMATS.map(format => `.${format}`).join(',')}\n                  style={{ display: 'none' }}\n                />\n                <button \n                  onClick={handleUploadClick}\n                  disabled={uploadStatus === 'processing'}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed\"\n                >\n                  <Upload className=\"w-4 h-4 inline mr-2\" />\n                  Upload\n                </button>\n                <StatusIndicator />\n                <ConnectionStatus />\n              </div>\n              <div className=\"flex items-center gap-4 text-sm\">\n                <span><strong>{stats.current_human_count}</strong> Current</span>\n                <span><strong>{stats.total_humans}</strong> Total</span>\n                <span><strong>{stats.total_frames}</strong> Frames</span>\n                <button \n                  onClick={downloadProcessedVideo}\n                  disabled={uploadStatus !== 'completed' || !uploadedFile}\n                  className={`px-3 py-1 rounded font-medium transition-colors ${\n                    uploadStatus === 'completed' && uploadedFile\n                      ? 'bg-green-600 hover:bg-green-700 text-white' \n                      : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                  }`}\n                >\n                  <Download className=\"w-4 h-4 inline mr-1\" />\n                  {uploadStatus === 'completed' && uploadedFile ? 'Download' : \n                   uploadStatus === 'processing' ? 'Processing...' :\n                   'Download'}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Video Display */}\n          <div \n            className=\"bg-black flex items-center justify-center relative h-screen-70 w-full\"\n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n          >\n            {currentFrame ? (\n              <img \n                src={currentFrame} \n                alt=\"Processed frame with detections\" \n                className=\"max-w-full max-h-full object-contain\"\n              />\n            ) : (\n              <div className=\"text-white text-center\">\n                <Upload className=\"w-16 h-16 mx-auto mb-4 opacity-50\" />\n                <p className=\"text-lg\">Drop video file here or click Upload</p>\n                <p className=\"text-sm opacity-75\">\n                  Supports: {SUPPORTED_FORMATS.join(', ').toUpperCase()}\n                </p>\n                <p className=\"text-xs opacity-50 mt-2\">\n                  Real-time detection with bounding boxes will appear here\n                </p>\n              </div>\n            )}\n            {uploadStatus === 'processing' && (\n              <div className=\"absolute top-4 left-4 bg-red-600 text-white px-3 py-1 rounded-full text-sm font-medium\">\n                ● LIVE\n              </div>\n            )}\n            {stats.current_video && (\n              <div className=\"absolute bottom-4 left-4 bg-black bg-opacity-75 text-white px-3 py-1 rounded text-sm\">\n                {stats.current_video}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}